apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ include "nvindex.fullname" . }}-viewer"
  labels:
    {{- include "nvindex.labels" . | nindent 4 }}
    app.kubernetes.io/component: viewer
spec:
  replicas: 1
  serviceName: "{{ include "nvindex.fullname" . }}-viewer-0"
  selector:
    matchLabels:
      {{- include "nvindex.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: viewer
  template:
    metadata:
      labels:
        {{- include "nvindex.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: viewer
    spec:
      serviceAccountName: {{ include "nvindex.serviceAccountName" . }}
      imagePullSecrets:
      {{- if .Values.nvindex.image.secret }}
      - name: "{{ .Values.nvindex.image.secret }}"
      {{- end }}
      volumes:
        - name: scene-files
          configMap:
            name: "{{ include "nvindex.fullname" . }}-scenes"
        - name: rsync-config-files
          emptyDir: {}
        - name: setup-scripts
          configMap:
            name: "{{ include "nvindex.fullname" . }}-setup-scripts"
      initContainers:
        - name: setup
          image: {{ template "cloudhelper.image" . }}
          volumeMounts:
            - name: setup-scripts
              mountPath: /setup
            - name: rsync-config-files
              mountPath: /config
            - name: scene-files
              mountPath: /scenes
          command: ['bash']
          args: ['/setup/setup_head_node.sh']
      containers:
        - name: nvindex
          image: {{ template "nvindex.image" . }}
          imagePullPolicy: {{ .Values.nvindex.image.pullPolicy }}
          command: ['sleep']
          args: [ '30000' ]
          command: [ './nvindex-viewer.sh' ]
          args: [
            '--add', '/config/extra.prj',
            #'--add', '/config/empty.prj',
            {{- if .Values.scene }}
            '--add', '/scenes/scene.prj',
            {{- end }}
            '--cluster', 'TCP_WITH_DISCOVERY',
            '-dice::network::retention', '5',
            '-app::enable_fail_safety', 'yes',
            '-dice::network::discovery_address', '0.0.0.0',
          ]
          ports:
          - containerPort: 5555
          - containerPort: 10000
          - containerPort: 10001
          - containerPort: 8080
          - containerPort: 8081
          volumeMounts:
          - name: scene-files
            mountPath: /scenes
          - name: rsync-config-files
            mountPath: /config
          env:
          - name: LICENSE_SEARCH_PATH
            value: /config
          - name: NVINDEX_SCENES_DIR
            value: /scenes
          - name: NVINDEX_DATA_BUCKET
            value: s3://nvindex-datasets-us-west2/scenes
          resources:
            limits:
              nvidia.com/gpu: "{{ .Values.gpuCount }}"
{{- if .Values.debug }}
        - name: debug
          image: {{ template "debughelper.image" . }}
          command: ["bash"]
          args: ["-c", "while true; do sleep 60s; done"]
          volumeMounts:
          - name: scene-files
            mountPath: /scenes
          - name: rsync-config-files
            mountPath: /config
{{- end }}
      tolerations:
      - key: "kubernetes.azure.com/scalesetpriority"
        operator: "Equal"
        value: "spot"
        effect: "NoSchedule"
      - key: "sku"
        operator: "Equal"
        value: "gpu"
        effect: "NoSchedule"
